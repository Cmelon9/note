  因为需要判断wifi状态，使用到iwgetid命令，直接获取已连接的wifi的SSID
  以下是我个人修改的iwgetid的源码。
  
  #include "iwlib-private.h"		/* Private header */
  #include "iwlib.h"
  #include <getopt.h>

  //打印SSID
  static int
  print_essid(int			skfd,
        const char *	ifname)
  {
    struct iwreq		wrq;
    char			essid[IW_ESSID_MAX_SIZE + 2];	/* ESSID */
    char			pessid[4 * IW_ESSID_MAX_SIZE + 1];	/* Printable format */
    unsigned int		i;
    unsigned int		j;

    /* Make sure ESSID is always NULL terminated */
    memset(essid, 0, sizeof(essid));

    /* Get ESSID */
    wrq.u.essid.pointer = (caddr_t) essid;
    wrq.u.essid.length = IW_ESSID_MAX_SIZE + 2;
    wrq.u.essid.flags = 0;
    if(iw_get_ext(skfd, ifname, SIOCGIWESSID, &wrq) < 0)
      return(-1);

    printf("%s\n", essid);
    // 因为删除了network-manager，没有了wifi的界面连接提示，所以准备自己动手做一个，所以应该在此处操作状态栏，在状态栏加入图片
    return(0);
  }

  //打印设备信息
  static int
  print_one_device(int		skfd,
       const char*	ifname)
  {
    int ret;

    ret = print_essid(skfd, ifname);

    return(ret);
  }

  //扫描设备
  static int
  scan_devices(int		skfd)
  {
    char		buff[1024];
    struct ifconf ifc;
    struct ifreq *ifr;
    int		i;

    /* Get list of active devices  获取使用中的设备列表*/
    ifc.ifc_len = sizeof(buff);
    ifc.ifc_buf = buff;
    if(ioctl(skfd, SIOCGIFCONF, &ifc) < 0)
      {
        perror("SIOCGIFCONF");
        return(-1);
      }
    ifr = ifc.ifc_req;

    /* Print the first match */
    for(i = ifc.ifc_len / sizeof(struct ifreq); --i >= 0; ifr++)
      {
        if(print_one_device(skfd, ifr->ifr_name) >= 0)
    return 0;
      }
    return(-1);
  }

  int
  main(void)
  {
    int	skfd;			/* generic raw socket desc.	*/
    int	opt;
    int	ret = -1;

    /* Create a channel to the NET kernel. */
    if((skfd = iw_sockets_open()) < 0)
      {
        perror("socket");
        return(-1);
      }

    //当直接输入iwgetid时，不加任何参数，直接开始扫描设备
    ret = scan_devices(skfd);

    fflush(stdout);
    iw_sockets_close(skfd);
    return(ret);
}
